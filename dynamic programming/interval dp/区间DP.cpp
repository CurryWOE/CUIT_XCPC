for(int len=2;len<=n;++len)//枚举长度
{
    for(int l=1;l+len-1<=n;++l)//枚举起点
    {
        int r=l+len-1;//终点
        for(int i=l;i<ends;++i)//枚举分割点
            dp[l][r]=max(dp[l][r],dp[l][i]+dp[i+1][r]+w(l,r));
    }
}
/*
四边形不等式优化:
若w(l,r)满足条件，复杂度可以优化到O(n^2)
1.区间包含单调性,即若l<=l'<=r'<=r，则w(l',r')<=w(l,r)
2.四边形不等式,即若l<=l'<=r'<=r,则w(l,r')+w(l',r)<=w(l,r)+w(l',r')
为什么叫四边形不等式呢？
可能是因为这个不等式的形式与四边形对边长度和≤对角线长度和的形式非常类似。
接下来有两个非常神奇的结论:
当w(l,r)同时满足这两个条件时，dp[l][r]也将符合四边形不等式
如果dp[l][r]满足四边形不等式，假设m[l][r]为dp[l][r]的最优决策点，
那么m[l][r-1]<=m[l][r]<=m[l+1][r]
最优决策点是dp[l][r]取到我想要的最值的分割点
最优决策点的矩阵每一行、每一列都是单调不减的
*/
for (int i = 1; i <= n; ++i)
    m[i][i] = i; // 初始化边界决策点
for (int d = 2; d <= n; ++d)
{
    for (int 1 = 1, r = d; r <= n; ++l，++ r)
    {
        dp[1][r] = INF;
        for (int k = m[l][r - 1]; k <= m[l + 1][r]; ++k) // 利用结论，缩小了枚举范围
            if (dp[1][k] + dp[k + 1][r] + w(l, r) < dp[1][r])
            {
                dp[1][r] = dp[1][k] + dp[k + 1][r] + w(l, r); // 更新dp数组
                m[1][r] = k; // 更新决策点
            }
    }
}
/*
那么哪些二元函数符合四边形不等式呢?根据oi-wiki，我们有以下结论：
1.如果f(l,r)和g(l,r)符合四边形不等式/区间包含单调性，则对于任意A,B>=0
Af(l,r)+Bg(l,r)也符合四边形不等式/区间包含单调性。
2.如果存在f(x)和g(x)使w(l,r)=f(r)-g(l),则w(l,r)符合四边形恒等式
四边形恒等式:（即等号总是成立的四边形不等式）
如果 f,g单增，则w还符合区间包含单调性。
3.若h(x)单增且h'(x)单增，w(l,r)符合四边形不等式和区间包含单调性
则h(w(l,r))也符合四边形不等式和区间包含单调性。
4.若h'(x)单增，w(l,r)符合四边形恒等式和区间包含单调性，则 
h(w(l,r))也符合四边形不等式。